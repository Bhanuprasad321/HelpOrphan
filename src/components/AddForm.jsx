import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useAuth } from "../context/AuthContext"; // Import useAuth to get user info

/**
 * Component for administrators to add new items to the wishlist.
 *
 * @param {object} props - Component props.
 * @param {function} props.fetchItems - Function from App.jsx to re-fetch all wishlist items.
 */
function AddForm({ fetchItems }) { // ðŸ‘ˆ FIX 1: Accepting the fetchItems prop
Â  const navigate = useNavigate();
Â  const { currentUser } = useAuth(); // Get current user from context

Â  // State for the new item form (consolidated for cleaner handling)
Â  const [newItem, setNewItem] = useState({
Â  Â  item: "",
Â  Â  quantity: 1,
Â  Â  urgency: "low",
Â  Â  orphanage: "",
Â  });
Â  
Â  const [message, setMessage] = useState("");
Â  const [isSubmitting, setIsSubmitting] = useState(false);

Â  // Handle form input changes
Â  const handleChange = (e) => {
Â  Â  const { name, value } = e.target;
Â  Â  setNewItem((prev) => ({
Â  Â  Â  ...prev,
Â  Â  Â  [name]: name === "quantity" ? parseInt(value) || 1 : value,
Â  Â  }));
Â  };

Â  const handleSubmit = async (event) => {
Â  Â  event.preventDefault();
Â  Â  setIsSubmitting(true);
Â  Â  setMessage("");

Â  Â  if (!newItem.item || newItem.quantity <= 0 || !newItem.orphanage) {
Â  Â  Â  setMessage("Error: Please fill all the fields."); // ðŸ‘ˆ FIX 2: Replace alert() with setMessage
Â  Â  Â  setIsSubmitting(false);
Â  Â  Â  return;
Â  Â  }

Â  Â  try {
Â  Â  Â  if (!currentUser) {
Â  Â  Â  Â  setMessage("Error: You must be logged in as admin to add items."); // ðŸ‘ˆ FIX 2: Replace alert() with setMessage
Â  Â  Â  Â  setIsSubmitting(false);
Â  Â  Â  Â  return;
Â  Â  Â  }

Â  Â  Â  const token = await currentUser.getIdToken();

Â  Â  Â  const res = await fetch("http://localhost:5000/wishlist", {
Â  Â  Â  Â  method: "POST",
Â  Â  Â  Â  headers: {
Â  Â  Â  Â  Â  "Content-Type": "application/json",
Â  Â  Â  Â  Â  Authorization: `Bearer ${token}`, // Send Firebase auth token
Â  Â  Â  Â  },
Â  Â  Â  Â  body: JSON.stringify(newItem),
Â  Â  Â  });

Â  Â  Â  if (res.ok) {
Â  Â  Â  Â  // âœ… CORE FIX: Call fetchItems to update the central state and re-render the Home page
Â  Â  Â  Â  await fetchItems(); 
Â  Â  Â  Â  
Â  Â  Â  Â  setMessage("Success: Item added successfully to the wishlist! The home page is now updated.");
Â  Â  Â  Â  
Â  Â  Â  Â  // Clear form
Â  Â  Â  Â  setNewItem({ item: "", quantity: 1, urgency: "low", orphanage: newItem.orphanage });
Â  Â  Â  Â  
Â  Â  Â  Â  // Navigate after a short delay to allow success message display
Â  Â  Â  Â  setTimeout(() => navigate("/"), 1500);

Â  Â  Â  } else {
Â  Â  Â  Â  const errorData = await res.json();
Â  Â  Â  Â  setMessage(`Error: Failed to add item: ${errorData.error || "Please try again."}`); // ðŸ‘ˆ FIX 2: Replace alert() with setMessage
Â  Â  Â  }
Â  Â  } catch (err) {
Â  Â  Â  console.error(err);
Â  Â  Â  setMessage("Error: An unexpected network error occurred. Please check the console."); // ðŸ‘ˆ FIX 2: Replace alert() with setMessage
Â  Â  } finally {
Â  Â  Â  setIsSubmitting(false);
Â  Â  }
Â  };

Â  return (
Â  Â  <div className="min-h-[calc(100vh-64px)] flex items-center justify-center bg-gray-900 p-6">
Â  Â  Â  <div className="max-w-xl w-full bg-gray-800 p-8 rounded-xl shadow-2xl border border-teal-700">
Â  Â  Â  Â  <h2 className="text-3xl font-extrabold text-teal-400 mb-6 border-b border-teal-700 pb-2">
Â  Â  Â  Â  Â  Add New Wishlist Item (Admin)
Â  Â  Â  Â  </h2>
Â  Â  Â  Â  {/* ðŸ‘ˆ FIX 2: Custom Message Box */}
Â  Â  Â  Â  {message && (
Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  className={`p-3 mb-4 rounded-lg text-sm font-medium ${message.startsWith('Error') ? 'bg-red-900 text-red-300' : 'bg-green-900 text-green-300'}`}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {message.replace('Error: ', '').replace('Success: ', '')}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}
Â  Â  Â  Â  <form onSubmit={handleSubmit} className="space-y-5">
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block mb-2 text-sm text-gray-300" htmlFor="item">
Â  Â  Â  Â  Â  Â  Â  Item Name
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  className="w-full p-2 rounded-lg text-white bg-gray-800 border border-gray-700 focus:ring-2 focus:ring-teal-500 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  id="item"
Â  Â  Â  Â  Â  Â  Â  name="item"
Â  Â  Â  Â  Â  Â  Â  value={newItem.item}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  Â  className="block mb-2 text-sm text-gray-300"
Â  Â  Â  Â  Â  Â  Â  htmlFor="quantity"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Quantity
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  className="w-full p-2 rounded-lg text-white bg-gray-800 border border-gray-700 focus:ring-2 focus:ring-teal-500 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  type="number"
Â  Â  Â  Â  Â  Â  Â  id="quantity"
Â  Â  Â  Â  Â  Â  Â  name="quantity"
Â  Â  Â  Â  Â  Â  Â  min="1"
Â  Â  Â  Â  Â  Â  Â  value={newItem.quantity}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  Â  className="block mb-2 text-sm text-gray-300"
Â  Â  Â  Â  Â  Â  Â  htmlFor="urgency"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Urgency
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  id="urgency"
Â  Â  Â  Â  Â  Â  Â  name="urgency"
Â  Â  Â  Â  Â  Â  Â  value={newItem.urgency}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full p-2 rounded-lg text-white bg-gray-800 border border-gray-700 focus:ring-2 focus:ring-teal-500 focus:outline-none"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <option value="low">Low</option>
Â  Â  Â  Â  Â  Â  Â  <option value="medium">Medium</option>
Â  Â  Â  Â  Â  Â  Â  <option value="high">High</option>
Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  Â  className="block mb-2 text-sm text-gray-300"
Â  Â  Â  Â  Â  Â  Â  htmlFor="orphanage"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Orphanage Name
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  className="w-full p-2 text-white rounded-lg bg-gray-800 border border-gray-700 focus:ring-2 focus:ring-teal-500 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  id="orphanage"
Â  Â  Â  Â  Â  Â  Â  name="orphanage"
Â  Â  Â  Â  Â  Â  Â  value={newItem.orphanage}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  disabled={isSubmitting}
Â  Â  Â  Â  Â  Â  className={`w-full py-2 mt-4 font-semibold rounded-lg shadow-md transition ${
Â  Â  Â  Â  Â  Â  Â  isSubmitting 
Â  Â  Â  Â  Â  Â  Â  Â  ? 'bg-gray-600 text-gray-400 cursor-not-allowed' 
Â  Â  Â  Â  Â  Â  Â  Â  : 'bg-gradient-to-r from-teal-500 to-teal-400 hover:from-teal-600 hover:to-teal-500 text-white'
Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {isSubmitting ? "Submitting..." : "Submit"}
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </form>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
}
export default AddForm;
